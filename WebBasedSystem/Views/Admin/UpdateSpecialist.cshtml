@model WebBasedSystem.ViewModels.SpecialistModel
@{
    Layout = "~/Views/Shared/_AdministratorLayout.cshtml";
}
<script src="http://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.10.0.min.js" type="text/javascript"></script>
<script src="http://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/jquery-ui.min.js" type="text/javascript"></script>
<link href="http://ajax.aspnetcdn.com/ajax/jquery.ui/1.9.2/themes/blitzer/jquery-ui.css"     rel="Stylesheet" type="text/css" />
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<script src="~/Scripts/bootstrap.min.js"></script>
<link href="~/Content/css/ruang-admin.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.js"></script>
<style>
    .row > [class^="col-"] { /* This will grab all the elements with classes that start with "col-" and that are the immediate children of #main-form. */
        margin-bottom: 20px;
        /* or the value of your bootstrap's gutter width so that you can have a nice consistent margin between elements*/
    }
</style>
<div class="row">
    <div class="col-lg-6">
        <!-- Form Basic -->
        <div class="card mb-4" style="width:185%;margin-left: 65px;">
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between" style="background-color:darkblue;">
                <h6 class="m-0 font-weight-bold" style="color:white;">Specilaist Form</h6>
            </div>
            <div class="card-body">
                <form id="myFormEdit">
                    <div class="row"> 
                        <input type="hidden" id="WayPointId" name="Id" />

                        @Html.HiddenFor(x=>x.IsDeleted)
                        @Html.HiddenFor(x => x.SpecialistId)



                        <div class="col-md-6">
                            @if (ViewBag.CountryList != null)
                            {
                                @Html.DropDownListFor(model => model.SpecialistTypeId, ViewBag.CountryList as SelectList, "--Select SpecialistType--", new { @class = "form-control" })
                            }

                        </div>
                        <div class="col-md-6">
                            @Html.DropDownListFor(model => model.SubMenuId, ViewBag.SubMenu as SelectList, "--Select Sub-SpecialistType--", new { @class = "form-control" })
                        </div>
                        <div class="col-md-6">
                            @if (ViewBag.Title != null)
                            {
                                @Html.DropDownListFor(model => model.TitleId, ViewBag.Title as SelectList, "--Select Title--", new { @class = "form-control" })
                            }
                        </div>

                        <div class="col-md-6">
                            @Html.TextBoxFor(model => model.SpecialistName, new { @id = "SpecialistName", @class = "form-control", @placeholder = "Specialist Name" })
                        </div>
                        <div class="col-md-6">
                            @Html.TextBoxFor(model => model.Surname, new { @id = "Surname", @class = "form-control", @placeholder = "Surname" })
                        </div>
                        <div class="col-md-6">
                            @Html.TextBoxFor(model => model.BusinessName, new { @id = "BusinessName", @class = "form-control", @placeholder = "Business Name" })
                        </div>
                        <div class="col-md-6">
                            @Html.TextBoxFor(model => model.Age, new { @id = "Age", @class = "form-control", @placeholder = "Age" })
                        </div>
                        <div class="col-md-6">
                            @Html.TextBoxFor(model => model.PhoneNo, new { @id = "PhoneNo", @class = "form-control", @placeholder = "Phone No" })
                        </div>
                        <div class="col-md-6">
                            @Html.TextBoxFor(model => model.MobileNo, new { @id = "MobileNo", @class = "form-control", @placeholder = "Mobile No" })
                        </div>
                        <div class="col-md-6">
                            @Html.TextBoxFor(model => model.OfficeNo, new { @id = "OfficeNo", @class = "form-control", @placeholder = "Office No" })
                        </div>
                        <div class="col-md-6">
                            @Html.TextBoxFor(model => model.Address1, new { @id = "Address1", @class = "form-control", rows = "5", @placeholder = "Address 1" })
                        </div>
                        <div class="col-md-6">
                            @Html.TextBoxFor(model => model.Address2, new { @id = "Address2", @class = "form-control", rows = "5", @placeholder = "Address 2" })
                        </div>
                        <div class="col-md-6">
                            @Html.TextBoxFor(model => model.EmailAddress, new { @id = "EmailAddress", @class = "form-control", @placeholder = "Email Address" })
                        </div>
                        <div class="col-md-6">
                            @Html.TextBoxFor(model => model.Suburbs, new { @id = "Suburbs", @class = "form-control", @placeholder = "Suburbs" })
                        </div>
                        <div class="col-md-6">
                            @Html.TextBoxFor(model => model.State, new { @id = "State", @class = "form-control", @placeholder = "State" })
                        </div>
                        <div class="col-md-6">
                            @Html.TextBoxFor(model => model.PostCode, new { @id = "PostCode", @class = "form-control", @placeholder = "PostCode" })
                        </div>


                        <div class="col-md-6">
                            @Html.TextBoxFor(m => m.price, new { @class = "form-control", type = "number", step = "0.01", max = "100000.00", placeholder = "Price", required = "required" })
                        </div>
                        <div class="col-md-6">
                            @if (ViewBag.Specialist != null)
                            {
                                @Html.DropDownListFor(model => model.SpecialistId, ViewBag.Specialist as SelectList, "--Select Specialist--", new { @class = "form-control" })
                            }
                        </div>
                        <div class="col-md-6">
                            @if (ViewBag.WaitingTime != null)
                            {
                                @Html.DropDownListFor(model => model.Waiting_Time_Id, ViewBag.WaitingTime as SelectList, "--Select Waiting Time--", new { @class = "form-control" })
                            }
                        </div>
                        <div class="col-md-6">
                            <label>
                                Booking
                            </label>
                            <label>

                                @Html.RadioButtonFor(x => x.IsBooking, true)
                                Yes
                            </label>
                            <label>
                                @Html.RadioButtonFor(x => x.IsBooking, false)
                                No
                            </label>
                        </div>
                        <div class="col-md-6">
                            @Html.TextAreaFor(model => model.NotesDescription, new { @id = "NotesDescription", @class = "form-control", rows = "5", @placeholder = "Notes Description" })
                        </div>
                        <div class="col-md-6">
                            <label>Taking New Patients</label>
                            @*@Html.RadioButtonFor(model => model.TakingNewPatients, new { @id = "MobileNo", @class = "form-control", @placeholder = "Mobile No" })*@
                            <label>
                                @Html.RadioButtonFor(x => x.TakingNewPatients, true)
                                Yes
                            </label>
                            <label>

                                @Html.RadioButtonFor(x => x.TakingNewPatients, false)
                                No
                            </label>


                        </div>


                        <button id="btnEdit" type="button" class="btn btn-outline-success mb-1" style="margin-left: 15px;width: 110px;">Submit</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {

        $("#SpecialistTypeId").change(function () {
            $.get("/Admin/GetMenuList", { SpecialistTypeId: $("#SpecialistTypeId").val() }, function (data) {
                $("#SubMenuId").empty();
                $.each(data, function (index, row) {
                    $("#SubMenuId").append("<option value='" + row.SubMenuId + "'>" + row.SubMenuName + "</option>")
                });
            });
        });
        $(function () {
            $("#PostCode").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Admin/AutoCompletePostCode/',
                        data: "{ 'prefix': '" + request.term + "'}",
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#WayPointId").val(i.item.val);
                },
                minLength: 1
            });
        });
        $(function () {
            $("#Suburbs").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Admin/AutoCompleteSuburbs/',
                        data: "{ 'prefix': '" + request.term + "'}",
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#WayPointId").val(i.item.val);
                },
                minLength: 1
            });
        });
        $(function () {
            $("#State").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Admin/AutoCompleteState/',
                        data: "{ 'prefix': '" + request.term + "'}",
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#WayPointId").val(i.item.val);
                },
                minLength: 1
            });
        });

        $("#btnEdit").click(function () {



            var myformdataedit = $("#myFormEdit").serialize();

            $.ajax({


                type: "POST",
                url: "/Admin/UpdateSpecialist",
                data: myformdataedit,
                success: function () {
                    swal("The specialist record is updated sucessfully ", "success");
                    //console.log("aaagay");
                    $("#loaderDiv").hide();
                    window.location.href = "/Admin/AllSpecialist";

                }

            })
        })
    });
</script>
s